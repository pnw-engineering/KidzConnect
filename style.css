:root {
  /* Light theme */
  --bg: #f0f8ff;
  --card: #ffffff;
  --accent: #69c0ff;
  --accent-2: #ffd666;
  --text: #1b263b;
  /* --tile-h: 72px; */
  --header-h: 80px;
  --hints-btm-pad: 18px;
  --hints-bg: linear-gradient(180deg, #fffaf0, #fff6e6);
  --solved-bg: linear-gradient(180deg, #d4f5d4, #bff2bf);
  --solved-text: #053;
  --hint-border: rgba(27, 38, 59, 0.06);
  --shadow: rgba(27, 38, 59, 0.06);
  --button-bg: #fff;
  --button-border: rgba(27, 38, 59, 0.08);
  --border-color: rgba(27, 38, 59, 0.12);
  --icon-color: #666;
}

/* Dark theme - both for system preference and manual toggle */
@media (prefers-color-scheme: dark) {
  :root:not(.light-theme) {
    --bg: #0f0f1a;
    --card: #1a1a2e;
    --accent: #5ca1ea;
    --accent-2: #ffd666;
    --text: #ffffff;
    --hints-bg: linear-gradient(180deg, #1a1a2e, #151525);
    --solved-bg: linear-gradient(180deg, #2d4a2d, #1e3b1e);
    --solved-text: #a0ff90;
    --hint-border: rgba(255, 255, 255, 0.15);
    --shadow: rgba(0, 0, 0, 0.3);
    --button-bg: #2a2a3e;
    --button-border: rgba(255, 255, 255, 0.2);
    --border-color: rgba(255, 255, 255, 0.2);
    --icon-color: #cccccc;
  }
}

/* Manual dark theme toggle */
:root.dark-theme {
  --bg: #0f0f1a;
  --card: #1a1a2e;
  --accent: #5ca1ea;
  --accent-2: #ffd666;
  --text: #ffffff;
  --hints-bg: linear-gradient(180deg, #1a1a2e, #151525);
  --solved-bg: linear-gradient(180deg, #2d4a2d, #1e3b1e);
  --solved-text: #a0ff90;
  --hint-border: rgba(255, 255, 255, 0.15);
  --shadow: rgba(0, 0, 0, 0.3);
  --button-bg: #2a2a3e;
  --button-border: rgba(255, 255, 255, 0.2);
  --border-color: rgba(255, 255, 255, 0.2);
  --icon-color: #cccccc;
}

/* Dark theme background for both manual toggle and system preference */
:root.dark-theme body {
  background: radial-gradient(circle at 10% 10%, #252538, var(--bg));
}

@media (prefers-color-scheme: dark) {
  body:not(.light-theme) {
    background: radial-gradient(circle at 10% 10%, #252538, var(--bg));
  }
}

:root {
  /* Base responsive font sizing */
  font-size: clamp(8px, min(4.75lvh, 3.25vw), 32px);

  /* Responsive variables */
  --container-padding: max(1em, 2vw);
  --grid-gap: clamp(0.5em, 2vw, 1em);

  /* Dimensions based on viewport */
  --word-padding: 1ch;
  /* --tile-h: clamp(4rem, 10vw, 6rem); */
  --tile-h: 3ch;
  --header-h: clamp(3rem, 12vw, 5rem);

  /* Responsive spacing */
  --spacing-xs: 0.25rem;
  --spacing-sm: 0.5rem;
  --spacing-md: 1rem;
  --spacing-lg: 1.5rem;
  --spacing-xl: 2rem;
}

* {
  box-sizing: border-box;
}

html,
body {
  font-family: "Segoe UI", Roboto, Arial, sans-serif;
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

body {
  height: 100vh;
  height: 100lvh;
  display: flex;
  flex-direction: column;
  background: radial-gradient(circle at 10% 10%, #e6f7ff, var(--bg));
  color: var(--text);
  position: relative;
}

.game-header {
  text-align: center;
  margin-bottom: 20px;
}

.game-controls {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin: 15px 0;
}

.difficulty-select {
  display: flex;
  align-items: center;
  gap: 8px;
}

.difficulty-select select {
  padding: 5px 10px;
  border-radius: 5px;
  border: 1px solid var(--border-color);
  background: var(--card);
  color: var(--text);
  font-size: 0.5em;
  transition: all 0.2s ease-in-out;
  cursor: pointer;
}

.difficulty-select select:hover {
  border-color: var(--accent);
  box-shadow: 0 2px 6px rgba(105, 192, 255, 0.15);
}

.difficulty-select select:focus {
  outline: none;
  border-color: var(--accent);
  box-shadow: 0 0 0 2px rgba(105, 192, 255, 0.2);
}

.timer {
  font-family: monospace;
  font-size: 0.5em;
  font-weight: bold;
  color: var(--text);
  padding: 0.5em 0.75em;
  background: var(--card);
  border-radius: 0.5em;
  border: 1px solid var(--border-color);
  transition: all 0.2s ease-in-out;
}

@keyframes timer-pulse {
  0% {
    border-color: var(--border-color);
    box-shadow: none;
  }
  50% {
    border-color: var(--accent);
    box-shadow: 0 0 8px rgba(105, 192, 255, 0.3);
  }
  100% {
    border-color: var(--border-color);
    box-shadow: none;
  }
}

.timer.running {
  animation: timer-pulse 2s ease-in-out infinite;
}

.stats-panel {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin: 10px 0;
  flex-wrap: wrap;
}

.stat {
  background: var(--card);
  padding: 8px 15px;
  border-radius: 15px;
  font-size: 0.5em;
  color: var(--text);
  border: 1px solid var(--border-color);
  display: flex;
  align-items: center;
  gap: 5px;
  transition: all 0.2s ease-in-out;
  cursor: default;
}

.stat:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(105, 192, 255, 0.1);
  border-color: var(--accent);
}

.stat i {
  color: var(--icon-color);
  font-size: 1.1em;
}

.container {
  max-width: 70ch;
  padding: var(--container-padding);
  height: 100vh;
  height: 100lvh;
  margin: 0 auto;
  display: grid;
  box-sizing: border-box;
  position: relative;
  left: 0;
  transform: none;
  overflow: hidden;
}

.puzzle-area {
  display: grid;
  grid-template-columns: 5fr;
  gap: 1ch;
  align-items: start;
  /* height: 100%; */
}

.puzzle-column {
  grid-column: 1;
  grid-row: 2 / span 5;
}

.hints-column {
  background: var(--hints-bg);
  border: 2px solid var(--hint-border);
  border-radius: 10px;
  padding: 12px;
  margin: 0 auto;
  box-shadow: 0 6px 18px var(--shadow);
  grid-row: 1 / span 5;
  grid-column: 2;
  display: grid;
  grid-template-rows: repeat(5, 1fr);
  padding-bottom: var(--hints-btm-pad);
}

.hints-column.collapsed {
  grid-template-rows: 1fr;
  padding-bottom: 8px;
}

.hints-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 8px;
  margin-bottom: 8px;
}

.hints-header h2 {
  font-size: 1em;
  margin: 0;
}

.hints-list {
  grid-row: 2 / span 4;
  display: grid;
  grid-template-rows: repeat(4, var(--tile-h));
  gap: 12px;
  align-items: center;
  max-height: none;
  overflow: visible;
}

.hint-group {
  background: var(--card);
  border: 1px dashed var(--border-color);
  padding: 8px;
  border-radius: 8px;
  font-weight: 700;
  font-size: 0.6em;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  color: var(--text);
}

.hint-group:hover {
  background: var(--bg);
  border-color: var(--accent);
  box-shadow: 0 2px 8px var(--shadow);
}

.hint-group.hint-active {
  background: var(--accent);
  border-color: var(--accent);
  color: #fff;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(105, 192, 255, 0.2);
}

/* Animation for highlighted words */
@keyframes hint-pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

.word.hint-highlighted {
  background: linear-gradient(180deg, var(--accent), var(--accent-2));
  color: #102;
  animation: hint-pulse 1s ease infinite;
  border-color: var(--accent);
}

.hints-header {
  position: sticky;
  top: 0;
  background: transparent;
  padding-bottom: 6px;
  z-index: 2;
}

h1 {
  margin: 0 0 8px;
  font-size: 1.5em;
  text-align: center;
}

.instructions {
  margin: 0 0 1em;
  color: var(--text);
  opacity: 0.9;
  font-size: 0.5em;
  text-align: center;
  max-width: 40em;
  margin-left: auto;
  margin-right: auto;
}

.grid-area {
  display: grid;
  grid-template-rows: repeat(4, 3ch);
  gap: 1ch;
  width: 100%;
  /* max-width: 600px; */
  margin: 0 auto;
  /* padding: var(--container-padding); */
  perspective: 1000px;
}

.Gridrow {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: var(--grid-gap);
  transform-style: preserve-3d;
}

.Gridcell {
  position: relative;
  /* height: var(--tile-h); */
  width: 100%;
  transform-style: preserve-3d;
  transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.Gridcell.word {
  background: linear-gradient(180deg, var(--card), #f8fcff);
  border: 3px solid transparent;
  border-radius: 10px;
  display: flex;
  flex-grow: 1;
  min-height: 3ch;
  align-items: center;
  justify-content: center;
  box-shadow: 0 6px 12px var(--shadow);
  cursor: pointer;
  font-weight: 600;
  text-align: center;
  transform: translateZ(0);
  backface-visibility: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform, background, box-shadow;
  /* Text styling moved from .text-fit to cell directly */
  font-size: clamp(
    12px,
    2.5vw,
    24px
  ); /* Responsive font size with reasonable bounds */
  white-space: nowrap;
  word-break: keep-all;
  overflow-wrap: normal;
  hyphens: none;
  opacity: 0;
  transform: scale(0.9);
  transition: opacity 0.3s ease, transform 0.3s ease;
  -webkit-hyphens: none;
  -ms-hyphens: none;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Container for text that will be auto-scaled - REMOVED, styles moved to .word above */

/* Animate text appearance when loaded */
.Gridcell.word.loaded {
  opacity: 1;
  transform: scale(1);
}

.Gridcell.word:hover {
  transform: translateZ(10px);
  box-shadow: 0 8px 16px var(--shadow);
}

.Gridcell.word:active {
  transform: translateZ(5px);
}

.Gridcell.word:focus-visible {
  outline: none;
  box-shadow: 0 0 0 4px var(--accent), 0 6px 12px var(--shadow);
}

.Gridcell.word.selected {
  background: linear-gradient(180deg, var(--accent), var(--accent-2));
  color: #102;
  transform: translateZ(20px) scale(1.05);
  box-shadow: 0 12px 24px var(--shadow);
}

.Gridcell.word.solved {
  background: var(--solved-bg);
  color: var(--solved-text);
  opacity: 0.95;
  transform: translateZ(0) scale(1);
  box-shadow: none;
  cursor: default;
  pointer-events: none;
}

/* Animations for state changes */
@keyframes selectPop {
  0% {
    transform: translateZ(0) scale(1);
  }
  50% {
    transform: translateZ(30px) scale(1.1);
  }
  100% {
    transform: translateZ(20px) scale(1.05);
  }
}

@keyframes solvePop {
  0% {
    transform: translateZ(20px) scale(1.05);
  }
  40% {
    transform: translateZ(40px) scale(1.15);
  }
  100% {
    transform: translateZ(0) scale(1);
  }
}

@keyframes wrongShake {
  0%,
  100% {
    transform: translateZ(20px) translateX(0);
  }
  25% {
    transform: translateZ(20px) translateX(-8px);
  }
  75% {
    transform: translateZ(20px) translateX(8px);
  }
}

.Gridcell.word.selected {
  animation: selectPop 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.Gridcell.word.solved {
  animation: solvePop 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.Gridcell.word.wrong {
  animation: wrongShake 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.controls {
  display: flex;
  gap: 8px;
  justify-content: center;
  margin-bottom: 12px;
  flex-wrap: wrap; /* Allow buttons to wrap on small screens */
}

.controls button {
  padding: 0.75em 1em;
  border-radius: 0.5em;
  border: 2px solid rgba(27, 38, 59, 0.08);
  background: #fff;
  cursor: pointer;
  font-size: 0.75em;
  min-width: 5em;
  min-height: 2.75em;
}

.controls button:hover {
  transform: translateY(-2px);
}

@media (hover: none) {
  .controls button:hover {
    transform: none; /* Disable hover effect on touch devices */
  }
}

/* Theme button styles */
#theme-btn {
  position: relative;
  padding: 8px 14px;
}

#theme-btn::after {
  content: "auto";
  position: absolute;
  bottom: -4px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 0.625em;
  background: var(--accent);
  color: white;
  padding: 2px 4px;
  border-radius: 4px;
  opacity: 0;
  transition: opacity 0.2s ease;
}

#theme-btn.theme-auto::after {
  opacity: 1;
}

#result {
  min-height: 24px;
  font-weight: 700;
}

/* iPad and mobile optimizations */
@supports (-webkit-touch-callout: none) {
  /* iOS-specific optimizations */
  body {
    -webkit-touch-callout: none; /* Prevent callout menu on long press */
    -webkit-user-select: none; /* Prevent text selection */
    user-select: none; /* Standard property for user selection */
    -webkit-tap-highlight-color: transparent; /* Remove tap highlight */
    touch-action: manipulation; /* Optimize touch behavior */
  }

  .Gridcell.word {
    cursor: pointer;
    -webkit-tap-highlight-color: transparent;
    touch-action: manipulation;
    user-select: none;
  }

  .Gridcell.word:active {
    transform: scale(0.95); /* Better touch feedback */
  }

  .controls button {
    padding: var(--spacing-md) var(--spacing-lg);
    min-height: calc(var(--spacing-xl) * 2);
    margin: var(--spacing-xs);
  }

  /* Prevent rubber-band scrolling */
  .container {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
  }

  /* Ensure buttons are easily tappable */
  .hint-group {
    min-height: 44px;
    padding: 12px;
  }

  /* Add momentum scrolling */
  .hints-list {
    -webkit-overflow-scrolling: touch;
  }
}
